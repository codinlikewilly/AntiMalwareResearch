import itertools
import difflib
from fuzzywuzzy import 
groupa = []
def poss_sets():
    a = 'ACTG'
    groupa = []
    groupc = []
    groupt = []
    groupg = []
    for output in itertools.product(a, repeat=4):
        if output[0] is 'A':
            groupa.append(''.join(output))
        elif output[0] is 'C':
            groupc.append(''.join(output))
        elif output [0] is 'G':
            groupg.append(''.join(output))
        elif output [0] is 'T':
            groupt.append(''.join(output))

    
    return groupa,groupc,groupg,groupt

def input_string(string):
    x = 0
    y = 4
    dna = []

    for a in range( len(string) + 1 ):
        if y == (len(string) + 1):
            break
        else:
            dna.append(string[x:y])
            x = x+1
            y = y+1
    return dna


def main():
    seq1 = ""
    seq2 = ""
    seq3 = ""
    similars1 = []
    similars2 = []
    similars3 = []
    poss_sets()

    #print(groupa)
   # for i in range(3):
       # if i == 0:
          #  seq1 = (input("Sequence 1:"))
       # elif i == 1:
           # seq2 = (input("Sequence 2:"))
        #else:
            #seq3 = (input("Sequence 3:"))
    seq1="ACTGACGCAG"
    seq2="TCACAACGGG"
    seq3="GAGTCCAGTT"
    l1 = (input_string(seq1))
    l2 = (input_string(seq2))
    l3 = (input_string(seq3))


    a = 'ACTG'
    possibles = []
    for output in itertools.product(a, repeat=4):
        possibles.append(''.join(output))

    for n in l1:
        print(n)
    for n in l1:
        match1 = difflib.get_close_matches(n,possibles,n=50,cutoff=0.7)
    for n in l2:
        match2 = difflib.get_close_matches(n,possibles,n=50,cutoff=0.7)
    for n in l3:
        match3 = difflib.get_close_matches(n,possibles,n=50,cutoff=0.7)
    print(match1)
    print(match2)
    print(match3)
        
    
    







main()

   # for n in l1:
       #match1 = difflib.get_close_matches(n,l2,cutoff=0.7)
        #print (match1)
    
    #print (match1)











