from Bio import SeqIO
from Bio.SubsMat.MatrixInfo import blosum62
from Bio import Align
from Bio import pairwise2
from generatesequence import *
from Bio.pairwise2 import format_alignment

#files
#file1 = "C:/Users/wills/OneDrive/Desktop/Research/testv1.txt"
#file2 = "C:/Users/wills/OneDrive/Desktop/Research/testv2.txt"

file1 = "C:/Users/wills/OneDrive/Desktop/Research/testv2.txt"
file2 = "C:/Users/wills/OneDrive/Desktop/Research/testv3.txt"
file3 = "C:/Users/wills/OneDrive/Desktop/Research/testv1.txt"
def main():
    b1 = tobinary(file1)
    f1seq = (generateseq(b1))

    b1 = tobinary(file2)
    f2seq = (generateseq(b1))

    b1 = tobinary(file3)
    f3seq = (generateseq(b1))

    

    X = f1seq
    Y = f2seq
    Z = f3seq

    print(X)
    print(Y)
    print(Z)
    
    alignments = pairwise2.align.globalms(X, Y, 2, -1, -0.5, -0.1)
    alignments2 = pairwise2.align.globalms(Y, Z, 2, -1, -0.5, -0.1)



    chars_i_want = set('ACTG,-')
    final_string = ''.join(c for c in str(alignments) if c in chars_i_want)
    final_string2 = ''.join(c for c in str(alignments2) if c in chars_i_want)

    
    string = final_string.split(",")
    string2 = final_string2.split(",")

    
    s1 = string[0]
    s2 = string[1]
    s3 = string2[1]
    
    print("longest substring 1 : " + longest_substring(s1,s2))
    print("longest substring 2 : " + longest_substring(s2,s3))
    
    print(generatehex(longest_substring(s1,s2)))
    print(generatehex(longest_substring(s2,s3)))
    


main()
